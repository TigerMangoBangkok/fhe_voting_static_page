"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[14],{4804:function(e,t,n){n.r(t),n.d(t,{Toast:function(){return y},ToastContainer:function(){return m},showToast:function(){return w}});var o=n(7437),r=n(2265),a=n(3008),i=n(2104),l=n(1981),s=n(4056),c=n(2549);let u={success:a.Z,error:i.Z,warning:l.Z,info:s.Z},d={success:"bg-green-50 border-green-200 text-green-800",error:"bg-red-50 border-red-200 text-red-800",warning:"bg-yellow-50 border-yellow-200 text-yellow-800",info:"bg-blue-50 border-blue-200 text-blue-800"},p={success:"text-green-600",error:"text-red-600",warning:"text-yellow-600",info:"text-blue-600"};function y(e){let{id:t,type:n,title:a,message:i,duration:l=5e3,onClose:s}=e,[y,m]=(0,r.useState)(!0);(0,r.useEffect)(()=>{let e=setTimeout(()=>{m(!1),setTimeout(()=>s(t),300)},l);return()=>clearTimeout(e)},[l,t,s]);let w=u[n];return(0,o.jsx)("div",{className:"fixed top-4 right-4 z-50 max-w-sm w-full transform transition-all duration-300 ".concat(y?"translate-x-0 opacity-100":"translate-x-full opacity-0"),children:(0,o.jsx)("div",{className:"".concat(d[n]," border rounded-lg shadow-lg p-4"),children:(0,o.jsxs)("div",{className:"flex items-start space-x-3",children:[(0,o.jsx)(w,{className:"h-5 w-5 mt-0.5 flex-shrink-0 ".concat(p[n])}),(0,o.jsxs)("div",{className:"flex-1 min-w-0",children:[(0,o.jsx)("h4",{className:"text-sm font-medium",children:a}),i&&(0,o.jsx)("p",{className:"text-sm mt-1 opacity-90",children:i})]}),(0,o.jsx)("button",{onClick:()=>{m(!1),setTimeout(()=>s(t),300)},className:"text-gray-400 hover:text-gray-600 transition-colors",children:(0,o.jsx)(c.Z,{className:"h-4 w-4"})})]})})})}function m(){let[e,t]=(0,r.useState)([]),n=e=>{t(t=>t.filter(t=>t.id!==e))};return window.showToast=e=>{let o=Math.random().toString(36).substr(2,9),r={...e,id:o,onClose:n};t(e=>[...e,r])},(0,o.jsx)("div",{className:"fixed top-0 right-0 z-50 p-4 space-y-4",children:e.map(e=>(0,o.jsx)(y,{...e},e.id))})}let w=(e,t,n,o)=>{window.showToast&&window.showToast({type:e,title:t,message:n,duration:o})}},457:function(e,t,n){n.r(t),n.d(t,{Web3Provider:function(){return C},useWeb3:function(){return T}});var o=n(7437),r=n(2265),a=n(4551),i=n(7415);let l="0x59c3db13E08eA48f8c0678174562333f30D1da6c",s="Sepolia Testnet",c="https://sepolia.infura.io/v3/78e2c8be8a32466cae545f06ebc780c1",u={YES:0,NO:1},d=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"AlreadyVoted",type:"error"},{inputs:[],name:"FHEPermissionDenied",type:"error"},{inputs:[],name:"InvalidProposal",type:"error"},{inputs:[],name:"NotVoted",type:"error"},{inputs:[],name:"ProposalNotFound",type:"error"},{inputs:[],name:"VoteCountsAlreadyPublic",type:"error"},{inputs:[],name:"VotingPeriodNotEnded",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"proposalId",type:"uint256"},{indexed:!1,internalType:"string",name:"title",type:"string"},{indexed:!1,internalType:"string",name:"description",type:"string"},{indexed:!1,internalType:"uint256",name:"startTime",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endTime",type:"uint256"},{indexed:!0,internalType:"address",name:"proposer",type:"address"}],name:"ProposalCreated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"proposalId",type:"uint256"},{indexed:!0,internalType:"address",name:"voter",type:"address"},{indexed:!1,internalType:"uint256",name:"timestamp",type:"uint256"}],name:"VoteCast",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"proposalId",type:"uint256"},{indexed:!1,internalType:"uint8",name:"yesCount",type:"uint8"},{indexed:!1,internalType:"uint8",name:"noCount",type:"uint8"}],name:"VoteCountsMadePublic",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"proposalId",type:"uint256"},{indexed:!1,internalType:"bool",name:"isActive",type:"bool"}],name:"ProposalStatusChanged",type:"event"},{inputs:[{internalType:"string",name:"title",type:"string"},{internalType:"string",name:"description",type:"string"},{internalType:"uint256",name:"duration",type:"uint256"}],name:"createProposal",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"getEncryptedVoteCount",outputs:[{internalType:"euint8",name:"yes",type:"bytes32"},{internalType:"euint8",name:"no",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"getMyVote",outputs:[{internalType:"euint8",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"getProposalDetails",outputs:[{internalType:"string",name:"title",type:"string"},{internalType:"string",name:"description",type:"string"},{internalType:"uint256",name:"startTime",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"},{internalType:"address",name:"proposer",type:"address"},{internalType:"uint256",name:"totalVotes",type:"uint256"},{internalType:"bool",name:"isActive",type:"bool"},{internalType:"bool",name:"isPublic",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"getPublicVoteCounts",outputs:[{internalType:"uint8",name:"yesCount",type:"uint8"},{internalType:"uint8",name:"noCount",type:"uint8"},{internalType:"bool",name:"isPublic",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"getTimeRemaining",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"getUserProposals",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"getUserVotes",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"},{internalType:"address",name:"voter",type:"address"}],name:"hasUserVoted",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"isProposalActive",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"},{internalType:"address",name:"user",type:"address"}],name:"isProposalOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"makeVoteCountsPublic",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"proposals",outputs:[{internalType:"string",name:"title",type:"string"},{internalType:"string",name:"description",type:"string"},{internalType:"uint256",name:"startTime",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"},{internalType:"euint8",name:"yesCount",type:"bytes32"},{internalType:"euint8",name:"noCount",type:"bytes32"},{internalType:"bool",name:"isPublic",type:"bool"},{internalType:"uint8",name:"publicYesCount",type:"uint8"},{internalType:"uint8",name:"publicNoCount",type:"uint8"},{internalType:"address",name:"proposer",type:"address"},{internalType:"uint256",name:"totalVotes",type:"uint256"},{internalType:"bool",name:"isActive",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"proposalCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"},{internalType:"externalEuint8",name:"encryptedVote",type:"bytes32"},{internalType:"bytes",name:"proof",type:"bytes"}],name:"vote",outputs:[],stateMutability:"nonpayable",type:"function"}],p=!1,y=null,m=async()=>{if(p){console.log("Zama SDK already loaded");return}if(y){console.log("Zama SDK loading already in progress, waiting..."),await y;return}console.log("Starting to load Zama SDK from CDN..."),y=new Promise((e,t)=>{if(window.initSDK&&window.createInstance){console.log("Zama SDK already available in window"),p=!0,e();return}let o=async()=>{try{console.log("Trying dynamic import...");let o=await n.e(940).then(n.bind(n,8940)),r=o.default||o;console.log("Dynamic import successful:",Object.keys(r)),window.initSDK=r.initSDK,window.createInstance=r.createInstance,window.SepoliaConfig=r.SepoliaConfig,window.initSDK&&window.createInstance?(console.log("Zama SDK loaded via dynamic import successfully"),p=!0,e()):t(Error("SDK functions not available after dynamic import"))}catch(e){console.error("Dynamic import also failed:",e),t(Error("Both CDN and dynamic import failed"))}};(()=>{let t=document.createElement("script");t.src="https://cdn.zama.ai/relayer-sdk-js/0.1.0-9/relayer-sdk-js.umd.cjs",t.type="text/javascript",t.onload=()=>{console.log("Zama SDK script loaded from CDN"),setTimeout(()=>{console.log("Checking SDK availability after CDN load..."),console.log("window.initSDK:",typeof window.initSDK),console.log("window.createInstance:",typeof window.createInstance),window.initSDK&&window.createInstance?(console.log("Zama SDK loaded from CDN successfully"),p=!0,e()):(console.log("CDN failed, trying dynamic import..."),o())},2e3)},t.onerror=()=>{console.log("CDN failed, trying dynamic import..."),o()},document.head.appendChild(t)})(),setTimeout(()=>{p||(console.error("Zama SDK load timeout"),t(Error("Zama SDK load timeout")))},15e3)}),await y},w=async()=>{if(await m(),!window.initSDK)throw Error("Zama SDK not available after loading");console.log("Initializing Zama SDK..."),await window.initSDK(),console.log("Zama SDK initialized successfully")},h=async e=>{if(await w(),!window.createInstance||!window.SepoliaConfig)throw Error("Zama SDK functions not available");console.log("Creating Zama instance with config:",{network:e.network,rpcUrl:e.rpcUrl,chainId:e.chainId,account:e.account});let t={...window.SepoliaConfig,network:e.network};console.log("SDK config:",t);try{let e=await window.createInstance(t);return console.log("Zama instance created successfully"),e}catch(e){throw console.error("Failed to create Zama instance:",e),Error("Failed to create Zama instance: ".concat((null==e?void 0:e.message)||"Unknown error"))}};class g{configChanged(e){return!this.currentConfig||this.currentConfig.account!==e.account||this.currentConfig.chainId!==e.chainId||this.currentConfig.rpcUrl!==e.rpcUrl}async getInstance(e){return(this.configChanged(e)&&(console.log("Config changed, creating new Zama instance..."),this.reset()),this.instance)?this.instance:this.initPromise?await this.initPromise:(this.currentConfig=e,this.initPromise=h(e),this.instance=await this.initPromise,this.instance)}async createInstance(e){return await this.getInstance(e),{encrypt:async t=>await this.encrypt(t,e),decrypt:async t=>await this.decrypt(t,e),publicDecrypt:async t=>await this.publicDecrypt(t,e),userDecrypt:async t=>await this.userDecrypt(t,e)}}async encrypt(e,t){let n=await this.getInstance(t);console.log("Encrypting value: ".concat(e));try{if(!t.account)throw Error("User address is required for FHE encryption. Please connect your wallet first.");let o=await n.createEncryptedInput(l,t.account);if(console.log("Created encrypted input buffer:",o),"function"==typeof o.add8)o.add8(e);else if("function"==typeof o.add16)o.add16(e);else if("function"==typeof o.add32)o.add32(e);else throw Error("No suitable add method found on buffer");let r=await o.encrypt();console.log("Ciphertexts result:",r);let a=Array.from(r.handles[0]),i="0x"+a.map(e=>e.toString(16).padStart(2,"0")).join(""),s=Array.from(r.inputProof),c="0x"+s.map(e=>e.toString(16).padStart(2,"0")).join("");return console.log("Final encryption result:",{encryptedValue:i,proof:c}),{encryptedValue:i,proof:c}}catch(e){throw console.error("Encryption failed:",e),Error("Encryption failed: ".concat((null==e?void 0:e.message)||"Unknown error"))}}async decrypt(e,t){await this.getInstance(t),console.log("Decrypting value: ".concat(e));let n=this.decryptCache.get(e);if(n&&Date.now()-n.timestamp<this.DECRYPT_CACHE_DURATION)return console.log("Returning cached decryption result:",n.value),n.value;try{let n=await this.publicDecrypt(e,t);return console.log("Decryption result:",n),this.decryptCache.set(e,{value:n,timestamp:Date.now()}),n}catch(e){throw console.error("Decryption failed:",e),Error("Decryption failed: ".concat((null==e?void 0:e.message)||"Unknown error"))}}async publicDecrypt(e,t){let n=await this.getInstance(t);console.log("Public decrypting value: ".concat(e));try{if(!e.startsWith("0x"))throw Error("Encrypted value must be a hex string starting with 0x");let t=[e];console.log("Calling publicDecrypt with handles:",t);let o=await n.publicDecrypt(t);console.log("Public decryption result:",o);let r=o[e];if(console.log("Decrypted value for handle:",r),void 0===r)throw Error("No decrypted value found for the given handle");let a=Number(r);return console.log("Numeric value:",a),a}catch(e){throw console.error("Public decryption failed:",e),Error("Public decryption failed: ".concat((null==e?void 0:e.message)||"Unknown error"))}}async userDecrypt(e,t){let n=await this.getInstance(t);console.log("User decrypting value: ".concat(e));try{var o,r;if(!t.account)throw Error("User address is required for user decryption");let i=this.decryptCache.get(e);if(i&&Date.now()-i.timestamp<this.DECRYPT_CACHE_DURATION)return console.log("Returning cached user decryption result:",i.value),i.value;let s=await n.generateKeypair();console.log("Generated keypair:",{publicKey:(null===(o=s.publicKey)||void 0===o?void 0:o.substring(0,20))+"...",privateKey:(null===(r=s.privateKey)||void 0===r?void 0:r.substring(0,20))+"..."});let c=[{handle:e,contractAddress:l}],u=Math.floor(Date.now()/1e3).toString(),d=[l],p=await n.createEIP712(s.publicKey,d,u,"10");console.log("EIP712 data:",p);let y=new a.Q(window.ethereum),m=await y.getSigner(),w=await m.signTypedData(p.domain,{UserDecryptRequestVerification:p.types.UserDecryptRequestVerification},p.message);console.log("Signature:",w);let h=await n.userDecrypt(c,s.privateKey,s.publicKey,w.replace("0x",""),d,m.address,u,"10");console.log("User decryption result:",h);let g=h[e];console.log("Decrypted value:",g);let f=Number(g);return this.decryptCache.set(e,{value:f,timestamp:Date.now()}),f}catch(e){throw console.error("User decryption failed:",e),Error("User decryption failed: ".concat((null==e?void 0:e.message)||"Unknown error"))}}isReady(){return null!==this.instance}isSDKAvailable(){return p&&this.isReady()}getSDKStatus(){return{initialized:this.isReady(),sdkInstance:this.isReady()?"Zama CDN Instance":null,cdnAvailable:p}}reset(){console.log("Resetting FHE service..."),this.instance=null,this.initPromise=null,this.clearDecryptCache()}clearDecryptCache(){this.decryptCache.clear()}getStatus(){return{ready:this.isReady(),sdkLoaded:p}}constructor(){this.instance=null,this.currentConfig=null,this.initPromise=null,this.decryptCache=new Map,this.DECRYPT_CACHE_DURATION=3e4}}let f=new g,v=e=>{var t,n,o;return(null==e?void 0:null===(t=e.message)||void 0===t?void 0:t.includes("getCoprocessorSigners"))?"Network does not support FHE. Please connect to Sepolia testnet.":(null==e?void 0:null===(n=e.message)||void 0===n?void 0:n.includes("Zama SDK can only be loaded on client side"))?"FHE SDK is not available on server side. Please try again.":(null==e?void 0:null===(o=e.message)||void 0===o?void 0:o.includes("Failed to load Zama SDK from CDN"))?"Failed to load FHE SDK from CDN. Please check your internet connection.":(null==e?void 0:e.message)||"Unknown FHE error occurred"},b=e=>{let[t,n]=(0,r.useState)(null),[o,a]=(0,r.useState)(!1),[i,l]=(0,r.useState)(!1),[s,c]=(0,r.useState)(null),[u,d]=(0,r.useState)(!1),p=(0,r.useCallback)(async e=>{l(!0),c(null);try{console.log("Initializing FHE service...",e);let t=await f.createInstance(e||{network:window.ethereum});n(t),a(!0),d(!0),console.log("FHE service initialized successfully")}catch(e){c(e instanceof Error?e.message:"Failed to initialize FHE service"),console.error("FHE initialization error:",e),a(!1),n(null),d(!1)}finally{l(!1)}},[]),y=(0,r.useCallback)(async()=>{console.log("Refreshing FHE instance..."),a(!1),n(null),c(null),await p(e)},[e,p]),m=(0,r.useCallback)(()=>{console.log("Resetting FHE service..."),f.reset(),a(!1),n(null),c(null),l(!1),d(!1)},[]);(0,r.useEffect)(()=>{!e||o||i?!e&&o&&m():p(e)},[e,o,i,p,m]);let w=(0,r.useCallback)(async e=>{if(console.log("FHE encrypt called with value:",e,"fheInstance:",!!t),!t)throw Error("FHE service not initialized. Please wait for initialization to complete.");try{let n=await t.encrypt(e);return console.log("FHE encrypt result:",n),n}catch(e){throw console.error("FHE encrypt error:",e),e}},[t]),h=(0,r.useCallback)(async e=>{if(console.log("FHE decrypt called with value:",e,"fheInstance:",!!t),!t)throw Error("FHE service not initialized. Please wait for initialization to complete.");try{let n=await t.decrypt(e);return console.log("FHE decrypt result:",n),n}catch(e){throw console.error("FHE decrypt error:",e),e}},[t]),g=(0,r.useCallback)(async e=>{if(console.log("FHE publicDecrypt called with value:",e,"fheInstance:",!!t),!t)throw Error("FHE service not initialized. Please wait for initialization to complete.");try{let n=await t.publicDecrypt(e);return console.log("FHE publicDecrypt result:",n),n}catch(e){throw console.error("FHE publicDecrypt error:",e),e}},[t]),v=(0,r.useCallback)(async e=>{if(console.log("FHE userDecrypt called with value:",e,"fheInstance:",!!t),!t)throw Error("FHE service not initialized. Please wait for initialization to complete.");try{let n=await t.userDecrypt(e);return console.log("FHE userDecrypt result:",n),n}catch(e){throw console.error("FHE userDecrypt error:",e),e}},[t]);return{fheInstance:t,isInitialized:o,isLoading:i,error:s,isSDKAvailable:u,encrypt:w,decrypt:h,publicDecrypt:g,userDecrypt:v,refreshInstance:y,resetFHE:m}},E=(0,r.createContext)(void 0);function C(e){let{children:t}=e,[n,p]=(0,r.useState)(null),[y,m]=(0,r.useState)(!1),[w,h]=(0,r.useState)(!1),[g,f]=(0,r.useState)(null),[C,T]=(0,r.useState)(null),[D,S]=(0,r.useState)([]),[I,x]=(0,r.useState)(!1),[P,k]=(0,r.useState)(!1),F=11155111===g,N=g?11155111===g?s:"Chain ID ".concat(g):null,H=y&&n?{network:window.ethereum,rpcUrl:c,account:n,chainId:g||void 0}:void 0;console.log("FHE config:",{isConnected:y,account:n,chainId:g,fheConfig:!!H});let{isInitialized:V,isLoading:K,error:U,encrypt:A,decrypt:M,publicDecrypt:z,userDecrypt:Z}=b(H);console.log("FHE status:",{fheInitialized:V,fheLoading:K,fheError:U,fheEncrypt:!!A}),(0,r.useEffect)(()=>{console.log("Initializing Web3..."),R()},[]),(0,r.useEffect)(()=>{!window.ethereum||y||w||(console.log("Ethereum available, checking for existing connection..."),R())},[y,w]),(0,r.useEffect)(()=>{let e=setTimeout(async()=>{if(window.ethereum&&!y&&!w&&!P)try{k(!0),(await window.ethereum.request({method:"eth_accounts"})).length>0&&(console.log("Auto-connecting to existing wallet..."),await j())}catch(e){console.error("Auto-connect failed:",e)}},1e3);return()=>clearTimeout(e)},[P]),(0,r.useEffect)(()=>{V&&y&&C&&0===D.length&&(console.log("FHE initialized, loading proposals..."),q())},[V,y,C]);let R=async()=>{if(console.log("Checking connection..."),window.ethereum)try{console.log("Ethereum provider found, checking accounts...");let e=await window.ethereum.request({method:"eth_accounts"});if(console.log("Available accounts:",e),e.length>0){console.log("Found connected account:",e[0]);let t=await window.ethereum.request({method:"eth_chainId"}),n=Number.parseInt(t,16);console.log("Current chain ID:",n),p(e[0]),f(n);let o=new a.Q(window.ethereum),r=await o.getSigner(),s=new i.CH(l,d,r),c=await o.getCode(l);if(console.log("Contract code exists:","0x"!==c),console.log("Contract address:",l),"0x"===c){console.error("Contract not found at address:",l),alert("Contract not found at this address. Please check deployment.");return}T(s),m(!0),console.log("Wallet connected, waiting for FHE initialization before loading proposals"),console.log("Restored wallet connection:",{account:e[0],chainId:n,isConnected:!0,contractExists:!0})}else console.log("No wallet connected, waiting for user to connect...")}catch(e){console.error("Error checking connection:",e)}else console.log("Ethereum provider not available")},j=async()=>{if(!window.ethereum){alert("Please install MetaMask!");return}try{h(!0);let e=await window.ethereum.request({method:"eth_requestAccounts"}),t=await window.ethereum.request({method:"eth_chainId"}),n=Number.parseInt(t,16),o=new a.Q(window.ethereum),r=await o.getSigner(),s=new i.CH(l,d,r);p(e[0]),f(n),T(s),m(!0),console.log("Wallet connected successfully:",{account:e[0],chainId:n,isConnected:!0}),console.log("Wallet connected, waiting for FHE initialization before loading proposals")}catch(e){console.error("Error connecting wallet:",e)}finally{h(!1)}},_=()=>{if(window.ethereum)try{window.ethereum.removeAllListeners&&window.ethereum.removeAllListeners(),window.ethereum.request&&window.ethereum.request({method:"wallet_requestPermissions",params:[{eth_accounts:{}}]}).then(()=>{}).catch(()=>{})}catch(e){console.warn("Error during wallet disconnection:",e)}p(null),m(!1),f(null),T(null),S([]),k(!1)},q=async e=>{let t=e||C;if(t)try{x(!0);let e=await t.proposalCount(),n=Number(e),o=[];for(let e=0;e<n;e++)try{let n,r;let a=await t.proposals(e),[i,l,s]=await t.getPublicVoteCounts(e),c=Number(i),u=Number(l),d=c+u;if(console.log("isPublic",s),console.log("fheInitialized",V),s&&V)try{let t=await X(e);c=t.yesCount,u=t.noCount,d=c+u,console.log("✅ Decrypted proposal ".concat(e,":"),{actualYesCount:c,actualNoCount:u})}catch(o){console.warn("⚠️ Failed to decrypt proposal ".concat(e,", using encrypted counts"),o);try{let[o,a]=await t.getEncryptedVoteCount(e);n=o,r=a,c=0,u=0,d=0}catch(t){console.warn("⚠️ Could not fetch encrypted counts for proposal ".concat(e),t)}}else try{let[o,a]=await t.getEncryptedVoteCount(e);n=o,r=a}catch(t){console.warn("⚠️ Could not fetch encrypted counts for proposal ".concat(e),t)}o.push({id:e,title:a.title,description:a.description,startTime:Number(a.startTime),endTime:Number(a.endTime),proposer:a.proposer,totalVotes:d,isActive:a.isActive,isPublic:s,yesCount:c,noCount:u,encryptedYesCount:n,encryptedNoCount:r})}catch(t){console.error("❌ Error loading proposal ".concat(e,":"),t)}S(o.reverse())}catch(e){console.error("Error loading proposals:",e)}finally{x(!1)}},W=async(e,t,o)=>{if(!C||!n)throw Error("Wallet not connected");try{x(!0);let n=await C.createProposal(e,t,o);await n.wait(),await q()}catch(e){throw console.error("Error creating proposal:",e),e}finally{x(!1)}},O=()=>!!F||(alert("This app only supports ".concat(s," network. Please switch to ").concat(s," in your wallet.")),!1),Y=async(e,t)=>{if(!C||!n)throw Error("Wallet not connected");if(!V)throw Error("FHE service not initialized. Please wait for initialization to complete.");if(O())try{x(!0);let[n,o,r]=await C.getPublicVoteCounts(e);if(r)throw Error("Voting is closed for this proposal. Results have been made public.");let a=t?u.YES:u.NO;if(console.log("Starting FHE encryption for vote:",{proposalId:e,voteValue:t,numericVote:a,voteOptions:u,fheInitialized:V,fheLoading:K,fheError:U}),0!==a&&1!==a)throw Error("Invalid vote value: ".concat(a,". Must be 0 (Yes) or 1 (No)"));if(!A)throw Error("FHE encrypt function not available");let i=await A(a);console.log("FHE encryption successful:",i),console.log("Contract vote call params:",{proposalId:e,encryptedValue:i.encryptedValue,proof:i.proof,contractAddress:C.target});let l=await C.vote(e,i.encryptedValue,i.proof);await l.wait(),await q()}catch(t){var o,r,a;if(console.error("Error voting:",t),null==t?void 0:null===(o=t.message)||void 0===o?void 0:o.includes("Already voted"))throw Error("You have already voted on this proposal. Each user can only vote once.");if(null==t?void 0:null===(r=t.message)||void 0===r?void 0:r.includes("Invalid proposal"))throw Error("Invalid proposal ID. Please refresh and try again.");if(null==t?void 0:null===(a=t.message)||void 0===a?void 0:a.includes("Voting is closed"))throw Error("Voting is closed for this proposal. Results have been made public.");let e=v(t);throw Error("Voting failed: ".concat(e))}finally{x(!1)}},G=async e=>{if(!C||!n)throw Error("Wallet not connected");try{x(!0),console.log("Making vote counts public for proposal ".concat(e,"...")),console.log("Contract address:",C.target),console.log("User address:",n);try{let t=await C.proposals(e);console.log("Proposal exists:",!!t);let[n,o,r]=await C.getPublicVoteCounts(e);if(console.log("Current proposal state:",{yesCount:Number(n),noCount:Number(o),isPublic:r}),r)throw Error("Vote counts are already public")}catch(e){console.log("Error checking proposal state:",e)}try{let t=await C.makeVoteCountsPublic.estimateGas(e);console.log("Gas estimate:",t.toString())}catch(e){if(console.error("Gas estimation failed:",e),null==e?void 0:e.data){let t=e.data;if(console.log("Error data:",t),t.includes("0xd0d25976"))throw Error("Custom error: Vote counts cannot be made public (possibly no votes cast yet)");if(t.includes("0x4e487b71"))throw Error("Custom error: Invalid proposal ID")}throw Error("Gas estimation failed: ".concat((null==e?void 0:e.message)||"Unknown error"))}let t=await C.makeVoteCountsPublic(e);if(console.log("Transaction sent:",t.hash),await t.wait(),console.log("Transaction confirmed"),console.log("Vote counts made public for proposal ".concat(e)),V)try{let t=await X(e);console.log("Decrypted vote counts after making public:",t)}catch(e){console.log("Could not decrypt vote counts immediately:",e)}await q()}catch(e){var t,o,r;if(console.error("Error making vote counts public:",e),null==e?void 0:null===(t=e.message)||void 0===t?void 0:t.includes("Vote counts already public"))throw Error("Vote counts are already public for this proposal.");if(null==e?void 0:null===(o=e.message)||void 0===o?void 0:o.includes("Invalid proposal"))throw Error("Invalid proposal ID. Please refresh and try again.");if(null==e?void 0:null===(r=e.message)||void 0===r?void 0:r.includes("Custom error:"))throw e;throw Error("Failed to make vote counts public: ".concat((null==e?void 0:e.message)||"Unknown error"))}finally{x(!1)}},L=async e=>{if(!C||!n)return!1;try{let t=await C.hasUserVoted(e,n);return console.log("User ".concat(n," has voted on proposal ").concat(e,":"),t),t}catch(e){return console.error("Error checking if user voted:",e),!1}},Q=async e=>{if(!C||!n)throw Error("Wallet not connected");try{let t=await C.getMyVote(e);return console.log("Encrypted vote for proposal ".concat(e,":"),t),t}catch(e){if(console.error("Error getting my vote:",e),null==e?void 0:e.data){let t=e.data;if(t.includes("0x4e487b71"))throw Error("Invalid proposal ID");if(t.includes("0x4e487b72"))throw Error("You have not voted on this proposal yet");if(t.includes("0xd0d25976"))throw Error("FHE permission denied - you may not have voted or FHE is not properly initialized")}throw Error("Failed to get my vote: ".concat((null==e?void 0:e.message)||"Unknown error"))}},B=async e=>{if(!C)throw Error("Contract not connected");try{let[t,n,o]=await C.getPublicVoteCounts(e);return{yesCount:Number(t),noCount:Number(n),isPublic:!!o}}catch(e){return console.error("Error getting public vote counts:",e),{yesCount:0,noCount:0,isPublic:!1}}},J=async e=>{if(!C||!n)return!1;try{return await C.isProposalOwner(e,n)}catch(e){return console.error("Error checking proposal ownership:",e),!1}},X=async e=>{if(!C||!V)throw Error("Contract or FHE not initialized");try{let[t,n]=await C.getEncryptedVoteCount(e);console.log("Encrypted vote counts:",{encryptedYes:t,encryptedNo:n});let o=await z(t),r=await z(n);return console.log("Decrypted vote counts:",{decryptedYes:o,decryptedNo:r}),{yesCount:Number(o),noCount:Number(r)}}catch(e){throw console.error("Error decrypting vote counts:",e),Error("Failed to decrypt vote counts: ".concat((null==e?void 0:e.message)||"Unknown error"))}},$=async()=>{await q()},ee=async()=>{if(!window.ethereum){alert("Please install MetaMask!");return}try{await window.ethereum.request({method:"wallet_switchEthereumChain",params:[{chainId:"0x".concat("aa36a7")}]})}catch(e){if(4902===e.code)try{await window.ethereum.request({method:"wallet_addEthereumChain",params:[{chainId:"0x".concat("aa36a7"),chainName:s,nativeCurrency:{name:"Sepolia Ether",symbol:"SEP",decimals:18},rpcUrls:[c],blockExplorerUrls:["https://sepolia.etherscan.io"]}]})}catch(e){console.error("Error adding Sepolia network:",e),alert("Failed to add Sepolia network to MetaMask")}else console.error("Error switching to Sepolia network:",e),alert("Failed to switch to Sepolia network")}};return(0,r.useEffect)(()=>{if(window.ethereum){let e=async e=>{console.log("Account changed:",e),0===e.length?_():(console.log("New account:",e[0]),window.location.reload())},t=e=>{console.log("Chain changed:",e),f(Number.parseInt(e,16)),window.location.reload()};return window.ethereum.on("accountsChanged",e),window.ethereum.on("chainChanged",t),()=>{window.ethereum.removeListener("accountsChanged",e),window.ethereum.removeListener("chainChanged",t)}}},[V,C,g]),(0,o.jsx)(E.Provider,{value:{account:n,isConnected:y,isConnecting:w,chainId:g,isCorrectNetwork:F,networkName:N,contract:C,proposals:D,isLoading:I,fheStatus:{initialized:V,loading:K,error:U,sdkAvailable:V&&!U},connectWallet:j,disconnectWallet:_,switchToSepolia:ee,createProposal:W,vote:Y,makeVoteCountsPublic:G,hasUserVoted:L,getMyVote:Q,getPublicVoteCounts:B,decryptVoteCounts:X,refreshProposals:$,isProposalOwner:J,fheDecrypt:M,fheUserDecrypt:Z},children:t})}function T(){let e=(0,r.useContext)(E);if(void 0===e)throw Error("useWeb3 must be used within a Web3Provider");return e}}}]);